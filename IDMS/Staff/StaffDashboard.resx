<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel7.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>